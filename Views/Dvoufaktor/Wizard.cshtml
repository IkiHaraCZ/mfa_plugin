@model Datona.Web.Models.MfaWizardViewModel
@inject Localization L
@{
    Layout = "_LayoutBase";
}

<div class="container mt-4 d-flex justify-content-center">
    <div id="mfaPage" class="w-100" style="max-width:350px;">
        <h3 class="mb-3 text-center">@L.GetResource("MFA_Title")</h3>

        @if (Model.IsActive)
        {
            <div class="alert alert-success mb-3">@L.GetResource("MFA_UzAktivni")</div>
            <form id="frmDisable" class="mt-2">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger btn-block">@L.GetResource("MFA_Vypnout")</button>
            </form>

            <form id="frmGen" class="mt-2">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-primary btn-block">@L.GetResource("MFA_GenerateBackupCodes")</button>
            </form>

            <div id="newCodes" class="mt-3" style="display:none">
                <h5 class="mb-2">@L.GetResource("MFA_BackupCodes")</h5>
                <p class="text-muted">@L.GetResource("MFA_BackupInstructions")</p>
                <ul id="newCodesList" class="mb-3"></ul>
                <div class="btn-group btn-group-sm mb-3" role="group" aria-label="Export">
                    <button type="button" class="btn btn-light" id="btnNewDownload">@L.GetResource("App_Stahnout")</button>
                    <button type="button" class="btn btn-light" id="btnNewPrint">@L.GetResource("App_Vytisknout")</button>
                    <button type="button" class="btn btn-light" id="btnNewEmail">@L.GetResource("App_OdeslatEmailem")</button>
                </div>
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="chkSavedNew" />
                    <label class="form-check-label" for="chkSavedNew">
                        @L.GetResource("MFA_Krok2_PotvrditUlozeni")
                    </label>
                </div>

                <form id="frmConfirm" class="mt-2">
                    @Html.AntiForgeryToken()
                    <input name="code" class="form-control mb-2" placeholder="@L.GetResource("MFA_ZalozniKod")" required />
                    <button type="submit" class="btn btn-primary btn-block">@L.GetResource("MFA_Continue")</button>
                </form>

                <div id="newCodesOk" class="alert alert-success mt-3" style="display:none">
                    @L.GetResource("MFA_ByloNastaveno")
                </div>
            </div>
        }
        else
        {
            <!-- KROK 1 -->
            <div id="mfa-step1">
                <p class="text-muted">@L.GetResource("MFA_Krok1_Popis")</p>
                <img class="d-block mx-auto my-3" src="/qr/otp?data=@Uri.EscapeDataString(Model.OtpAuthUri)" alt="@L.GetResource("MFA_QR_Alt")" />
                <div class="mt-2">
                    <div class="font-weight-bold">@L.GetResource("MFA_ManualniKlic_Nadpis")</div>
                    <code aria-label="@L.GetResource("MFA_ManualniKlic_Aria")">@Model.ManualKey</code>
                </div>
                <form id="mfa-form1" class="mt-3">
                    @Html.AntiForgeryToken()
                    <input name="code" class="form-control mb-2" placeholder="@L.GetResource("MFA_ZadejteKod")" required />
                    <button type="submit" class="btn btn-primary btn-block">@L.GetResource("MFA_Tlacitko_Pokracovat")</button>
                </form>
            </div>

            <!-- KROK 2 -->
            <div id="mfa-step2" style="display:none">
                <h5>@L.GetResource("MFA_Krok2_Nadpis")</h5>
                <p>@L.GetResource("MFA_Krok2_Popisek")</p>
                <ul id="backup-list" class="mb-3" aria-label="@L.GetResource("MFA_ZalozniKody_Aria")"></ul>
                <div class="btn-group btn-group-sm mb-3" role="group" aria-label="Export">
                    <button type="button" class="btn btn-light" id="btnBackupDownload">@L.GetResource("App_Stahnout")</button>
                    <button type="button" class="btn btn-light" id="btnBackupPrint">@L.GetResource("App_Vytisknout")</button>
                    <button type="button" class="btn btn-light" id="btnBackupEmail">@L.GetResource("App_OdeslatEmailem")</button>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="chkSaved" />
                    <label class="form-check-label" for="chkSaved">@L.GetResource("MFA_Krok2_PotvrditUlozeni")</label>
                </div>
                <button id="btnToStep3" class="btn btn-primary btn-block mt-3">@L.GetResource("MFA_Pokracovat")</button>
            </div>

            <!-- KROK 3 -->
            <div id="mfa-step3" style="display:none">
                <h5>@L.GetResource("MFA_Krok3_OveritJedenKod")</h5>
                <p>@L.GetResource("MFA_Krok3_Popisek")</p>
                <form id="mfa-form2" class="mt-2">
                    @Html.AntiForgeryToken()
                    <input name="code" class="form-control mb-2" placeholder="@L.GetResource("MFA_ZalozniKod")" required />
                    <button type="submit" class="btn btn-primary btn-block">@L.GetResource("MFA_Tlacitko_Pokracovat")</button>
                </form>
            </div>

            <!-- KROK 4 -->
            <div id="mfa-step4" style="display:none">
                <div class="alert alert-success">@L.GetResource("MFA_Krok4_Success")</div>
                <button id="btnFinish" class="btn btn-primary btn-block">@L.GetResource("MFA_Continue")</button>
            </div>
        }
    </div>
</div>

<script>
    (function(){
      const step1 = document.getElementById("mfa-step1");
      const step2 = document.getElementById("mfa-step2");
      const step3 = document.getElementById("mfa-step3");
      const step4 = document.getElementById("mfa-step4");
      const backupList = document.getElementById("backup-list");
      const chkSaved = document.getElementById("chkSaved");
      const btnToStep3 = document.getElementById("btnToStep3");
      const btnFinish = document.getElementById("btnFinish");
      const frm1 = document.getElementById("mfa-form1");
      const frm2 = document.getElementById("mfa-form2");
      const frmDisable = document.getElementById("frmDisable");
      const frmGen = document.getElementById("frmGen");
      const newCodes = document.getElementById("newCodes");
      const newCodesList = document.getElementById("newCodesList");
      const chkSavedNew = document.getElementById("chkSavedNew");
      const frmConfirm = document.getElementById("frmConfirm");
      const newCodesOk = document.getElementById("newCodesOk");

      function HideLoader() {
          $("#spinner-border").hide();
      };
      function ShowLoader() {
          $("#spinner-border").show();
      };

      async function post(url, form){
        try{
          const res = await fetch(url, { method:"POST", body:new FormData(form) });
          return await res.json();
        } catch{ return { ok:false, err:"@Html.Raw(L.GetResource("MFA_ChybaSite"))" }; }
      }

      if (frm1){
        frm1.onsubmit = async (e)=>{
          e.preventDefault();
          const code = (frm1.querySelector('input[name="code"]').value||'').trim();
          if (code.length < 6) { alert("@Html.Raw(L.GetResource("MFA_Kod_PrazdnyNeboKratky"))"); return; }
          ShowLoader();
          const r = await post("/Dvoufaktor/VerifyTotpJson", frm1);
          if (r.ok){
            HideLoader();
            backupList.innerHTML = '';
            backupList.innerHTML = (r.codes||[]).map(c=>`<li><code>${c}</code></li>`).join("");
            step1.style.display="none"; step2.style.display="block";
          }else{
            HideLoader();
            alert(r.err || "@Html.Raw(L.GetResource("MFA_Kod_Nesouhlasi"))");
          }
        };
      }

      if (btnToStep3){
        btnToStep3.onclick = ()=>{
          if (!chkSaved.checked){ alert("@Html.Raw(L.GetResource("MFA_Err_PotvrdUlozeni"))"); return; }
          step2.style.display="none"; step3.style.display="block";
        };
      }

      if (frm2){
        frm2.onsubmit = async (e)=>{
          e.preventDefault();
          const code = (frm2.querySelector('input[name="code"]').value||'').trim();
          if (!code){ alert("@Html.Raw(L.GetResource("MFA_Backup_Prazdny"))"); return; }
          ShowLoader();
          const r = await post("/Dvoufaktor/VerifyBackupJson", frm2);
          if (r.ok){ HideLoader(); step3.style.display="none"; step4.style.display="block"; }
          else { HideLoader(); alert(r.err || "@Html.Raw(L.GetResource("MFA_Backup_Nesedi"))"); }
        };
      }

      if (btnFinish){
        btnFinish.onclick = ()=>{ window.location.href = "/List/Home"; };
      }

      if (frmDisable){
        frmDisable.onsubmit = async (e)=>{
          e.preventDefault();
          if (!confirm('@Html.Raw(L.GetResource("MFA_SkutecneVypnout").Replace("'", "\\'"))')) return;
          const r = await post("/Dvoufaktor/VypnoutJson", frmDisable);
          if (r.ok) window.location.href = "/List/Home";
          else alert(r.err || "@Html.Raw(L.GetResource("MFA_ChybaVypnout"))");
        };
      }

        if (frmGen){
          frmGen.onsubmit = async (e)=>{
            e.preventDefault();
            ShowLoader();
              const r = await post("/Dvoufaktor/GenerateNewBackupCodesPreviewJson", frmGen);
                if (r.ok){
                    HideLoader();
                  newCodesList.innerHTML = (r.codes||[]).map(c=>`<li><code>${c}</code></li>`).join("");
                  newCodes.style.display = "block";
                } else { HideLoader(); alert(r.err || "@Html.Raw(L.GetResource("MFA_Err_GenerovaniKodu"))"); }
          };
        }

        if (frmConfirm){
          frmConfirm.onsubmit = async (e)=>{
            e.preventDefault();
            if (!chkSavedNew.checked){
              alert("@Html.Raw(L.GetResource("MFA_Err_PotvrdUlozeni"))");
              return;
            }
            ShowLoader();
            const r = await post("/Dvoufaktor/ConfirmNewBackupCodesJson", frmConfirm);
            HideLoader();
            if (r.ok){
              newCodesOk.style.display = "block";
              frmConfirm.style.display = "none";
            } else {
              alert(r.err || "@Html.Raw(L.GetResource("MFA_Err_GenerovaniKodu"))");
            }
          };
        }

    function codesTextFromList(ul) {
        if (!ul) return '';
        const codes = Array.from(ul.querySelectorAll('li code')).map(el => (el.textContent || '').trim()).filter(Boolean);
        return [...new Set(codes)].join('\n');
    }

    function downloadTextFile(filename, text) {
      const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url; a.download = filename;
      document.body.appendChild(a);
      a.click();
      setTimeout(()=>{ URL.revokeObjectURL(url); a.remove(); }, 0);
    }

    function printText(text) {
      const w = window.open('', '_blank');
      if (!w) { alert('Pop-up blokován.'); return; }
      w.document.open();
      w.document.write('<!doctype html><title>2FA codes</title><pre style="font-family:monospace;white-space:pre-wrap;margin:16px;">'
                       + (text || '').replace(/[&<>]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;'}[s])) +
                       '</pre>');
      w.document.close();
      w.focus();
      w.print();
    }

    function emailText(subject, body) {
      const mailto = 'mailto:?subject=' + encodeURIComponent(subject) + '&body=' + encodeURIComponent(body);
      window.location.href = mailto;
    }

    const btnBackupDownload = document.getElementById("btnBackupDownload");
    const btnBackupPrint    = document.getElementById("btnBackupPrint");
    const btnBackupEmail    = document.getElementById("btnBackupEmail");

    if (btnBackupDownload) btnBackupDownload.onclick = ()=>{
      const txt = codesTextFromList(backupList);
      if (!txt) return;
      downloadTextFile('2fa-backup-codes.txt', txt + '\n');
    };
    if (btnBackupPrint) btnBackupPrint.onclick = ()=>{
      const txt = codesTextFromList(backupList);
      if (!txt) return;
      printText(txt);
    };
    if (btnBackupEmail) btnBackupEmail.onclick = ()=>{
      const txt = codesTextFromList(backupList);
      if (!txt) return;
      emailText('Záložní kódy 2FA', txt);
    };

    const btnNewDownload = document.getElementById("btnNewDownload");
    const btnNewPrint    = document.getElementById("btnNewPrint");
    const btnNewEmail    = document.getElementById("btnNewEmail");

    if (btnNewDownload) btnNewDownload.onclick = ()=>{
      const txt = codesTextFromList(newCodesList);
      if (!txt) return;
      downloadTextFile('2fa-backup-codes.txt', txt + '\n');
    };
    if (btnNewPrint) btnNewPrint.onclick = ()=>{
      const txt = codesTextFromList(newCodesList);
      if (!txt) return;
      printText(txt);
    };
    if (btnNewEmail) btnNewEmail.onclick = ()=>{
      const txt = codesTextFromList(newCodesList);
      if (!txt) return;
      emailText('Záložní kódy 2FA', txt);
    };

    })();
</script>